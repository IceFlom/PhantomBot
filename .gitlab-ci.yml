docker-build-master:
  image: jdrouet/docker-with-buildx:stable
  stage: build
  services:
    - docker:dind
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_TOKEN" $CI_REGISTRY
  script:
    - docker buildx build --platform linux/amd64 --build-arg TARGETPLATFORM="linux/amd64" --build-arg PROJECT_VERSION="3.5.0" --push -t "$STABLE_IMAGE" .
    - docker buildx build --platform linux/arm64,linux/arm/v7 --build-arg TARGETPLATFORM="linux/arm64" --build-arg PROJECT_VERSION="3.5.0" --push -t "$STABLE_IMAGE" .
  only:
    - master
  except:
    changes:
      - docsbyice/*

docker-build-testing:
  image: jdrouet/docker-with-buildx:stable
  stage: build
  services:
    - docker:dind
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_TOKEN" $CI_REGISTRY
  script:
    - docker buildx build --platform linux/amd64 --build-arg TARGETPLATFORM="linux/amd64" --build-arg PROJECT_VERSION="3.5.0" --push -t "$CANARY_IMAGE" .
    - docker buildx build --platform linux/arm64,linux/arm/v7 --build-arg TARGETPLATFORM="linux/arm64" --build-arg PROJECT_VERSION="3.5.0" --push -t "$CANARY_IMAGE" .
  only:
    - testing
  except:
    changes:
      - docsbyice/*

docker-build-tags:
  image: docker:latest
  stage: build
  services:
    - docker:dind
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_TOKEN" $CI_REGISTRY
  script:
    - docker build --build-arg TARGETPLATFORM="linux/amd64" --build-arg PROJECT_VERSION="3.5.0" --pull -t "$TAG_IMAGE:$CI_COMMIT_TAG" .
    - docker push "$TAG_IMAGE:$CI_COMMIT_TAG"
  only:
    - tags
  except:
    changes:
      - docsbyice/*

image: python:latest
pages:
  stage: deploy
  only:
    refs:
      - master
    changes:
      - docsbyice/*
  script:
    - pip install mkdocs-material
    - cd docsbyice
    - mkdocs build --site-dir ../public
  artifacts:
    paths:
      - public